#include "../inc/SEServiceLocator.h"
#include "../inc/SimpleEngine.h"
#include "../inc/SEOpenGLRenderService.h"
#include "../inc/SEGLUIWindowManager.h"

SERenderService *SEServiceLocator::configRenderService(SERenderService::tRenderService t, std::string c)
{
  SERenderService *r_;

  switch(t)
  {
    case (SERenderService::OPENGL_RS):  r_ = new SEOpenGLRenderService(); break;
    case (SERenderService::NULL_RS):    r_ = new SENullRenderService();   break;
    case (SERenderService::DIRECTX_RS):
    default: return (NULL);
  }
  
  r_->startup(c);
  
  return r_;
}

SEWindowManager *SEServiceLocator::configWindowManager(SEWindowManager::tWindowManager t)
{
  switch(t)
  {
    case (SEWindowManager::GLUI_WM): return new SEGLUIWindowManager();
    case (SEWindowManager::NULL_WM): return new SENullWindowManager();
    case (SEWindowManager::GLEW_WM):
    case (SEWindowManager::GLUT_WM):
    default: return (NULL);
  }
}
    
SERenderService *SEServiceLocator::getRenderService()
{
  if (rs_==NULL)
    rs_ = configRenderService((SERenderService::tRenderService) SimpleEngine::cl()->getKeyi("tRenderService"), SimpleEngine::cl()->getKeys("fRenderServerConfig"));
  
  return rs_;
}

SEWindowManager *SEServiceLocator::getWindowManager()
{
  if (wm_==NULL)
    wm_ = configWindowManager((SEWindowManager::tWindowManager) SimpleEngine::cl()->getKeyi("tWindowManager"));
  
  return wm_;
}
